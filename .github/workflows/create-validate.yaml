name: Validate Terraform Plan and Create PR

on:
  push:
    branches:
      - "feature/**"

env:
  AWS_REGION: "us-east-1"

permissions:
  id-token: write
  contents: write

jobs:
  terraform-validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.set_branch.outputs.branch_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::211125482456:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Validate
        working-directory: infra
        run: terraform validate

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -no-color -out=tfplan

      - name: Set branch name
        id: set_branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

  stage-and-pr:
    name: Stage changes and create PR
    runs-on: ubuntu-latest
    needs: terraform-validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set branch name from previous job
        run: echo "BRANCH_NAME=${{ needs.terraform-validate.outputs.branch_name }}" >> $GITHUB_ENV

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install gh -y

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GH_PAT }}"

      - name: Stage all changes
        run: git add -A

      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -m "[Automated] Update infrastructure and assets" || echo "No changes to commit"

      - name: Push branch
        run: git push origin ${{ env.BRANCH_NAME }}

      - name: Create Pull Request
        run: |
          gh pr create \
            --base main \
            --head ${{ env.BRANCH_NAME }} \
            --title "Automated PR: Terraform + all changes" \
            --body "This PR includes all changes from branch `${{ env.BRANCH_NAME }}`" \
            || echo "PR already exists"


